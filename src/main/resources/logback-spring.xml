<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true">
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <springProperty scope="context" name="infoProjectVersion" source="info.project.version"/>


    <appender name="STASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <destination>${LOGSTASH_SOCKET}</destination>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">

            <providers>
                <timestamp/>
                <mdc/> <!-- MDC variables on the Thread will be written as JSON fields -->
                <context/> <!--Outputs entries from logback's context -->
                <version/> <!-- Logstash json format version, the @version field in the output -->
                <logLevel/>
                <loggerName/>

                <pattern>
                    <!-- we can add some custom fields to be sent with all the log entries. -->
                    <!--make filtering easier in Logstash -->
                    <!--or searching with Kibana -->
                    <pattern>
                        {
                        "service-name": "${springAppName}",
                        "service-version": "${infoProjectVersion}"
                        }
                    </pattern>
                </pattern>

                <threadName/>
                <message/>

                <logstashMarkers/> <!-- Useful so we can add extra information for specific log lines as Markers -->
                <arguments/> <!--or through StructuredArguments -->

                <stackTrace/>
            </providers>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="ASYNC" class="reactor.logback.AsyncAppender">
        <appender-ref ref="STASH"/>
        <!--     <appender-ref ref="STDOUT"/> -->
    </appender>

    <!--   <root level="#logback.loglevel#"> -->
    <root level="INFO">
        <appender-ref ref="ASYNC"/>
        <!--     <appender-ref ref="STDOUT"/> -->
    </root>

    <logger name="pe.pichincha" level="ALL"/>

    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>

</configuration>
